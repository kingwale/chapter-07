//Given a positive integer n, list all the moves required in the Tower of Hanoi puzzle to move n disks from one peg to another according to the rules of the puzzle.
#include <iostream>

void towerOfHanoi(int n, char source, char auxiliary, char destination) {
    if (n == 1) {
        std::cout << "Move disk 1 from " << source << " to " << destination << std::endl;
        return;
    }

    towerOfHanoi(n - 1, source, destination, auxiliary);
    std::cout << "Move disk " << n << " from " << source << " to " << destination << std::endl;
    towerOfHanoi(n - 1, auxiliary, source, destination);
}

int main() {
    int n;
    std::cout << "Enter the number of disks: ";
    std::cin >> n;

    if (n < 1) {
        std::cerr << "Invalid input. Number of disks must be positive." << std::endl;
        return 1;
    }

    std::cout << "Moves to solve the Tower of Hanoi with " << n << " disks:" << std::endl;
    towerOfHanoi(n, 'A', 'B', 'C');

    return 0;
}




